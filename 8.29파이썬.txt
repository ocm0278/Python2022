8.29일 파이썬

제어문 - 분기
         - 반복

기능 구상 40%
프로그램 30%
Debug 30% 이상 50%까지

continue 구문은 현재 반복을 끝내고 루프의 시작으로 정프해서 다름 반복을 실행

메모리(주)

무한 루프 while 경우가 많음
-> 시간,자원 낭비

대신 for 사용

for 루프

for i in [5 ,4 ,3 ,2 ,1 ]

for index  in [List] -  파이썬에 쓰는 for 문자 기본

range(5) - list 되돌려 주는 함수


제어문 분기분 은 : 필수

\t 탭\
\n=줄바꿈
\는 스페이스로 8칸

문자열을 이용한 유한 루프

for index

friends = ['안중근','유관순','이순신']
for friend in friends :
    print('우리 나라를 위해 몸바쳐 최서늘 다해주셔 감사드립니다~:' , friend)
print('Done!')

우리 나라를 위해 몸바쳐 최서늘 다해주셔 감사드립니다~: 안중근
우리 나라를 위해 몸바쳐 최서늘 다해주셔 감사드립니다~: 유관순
우리 나라를 위해 몸바쳐 최서늘 다해주셔 감사드립니다~: 이순신
Done!

프로그래밍 = 나의 생각에 흐름을 적립하라!

유한루프(for 루프)는 명시된 반복 변수를 가지고 있으며 각 루프를 통과할 때 마다 값이 변함. 이 반복

in 파헤치기

-반복 변수는 시퀀스(순서가 있는 집합)를 통해 "반복"
-코드의 루프 블럭(본문)은 시퀀스 안의 각 값에 대해 한번씩 실행
-반복 변수는 시퀀스 안의 모든 값을 가지고 실행

"똑똑한" 루프 만들기
효율성 추구

무엇이 최대값인가?

     3   41  12   9   74   15
numbers =[3,41,94,8,3,52,15]
max = numbers[0]
for x in numbers:
    if x>max :
        max=x

print(max)

max의 초기화 값 구하는게 관건

max = numbers[0]

배열의 값을 정할때는 배열의 첫번째 값으로 하는게 좋다


루프에서 개수 구하기
for idx in [List]

한순가에는 한가지 일만 처리
폰 노이만
순차적 일 처리
